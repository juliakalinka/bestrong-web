trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: terraform-web-vars
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push'
    steps:
    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: build
        dockerfile: $(dockerfilePath)
        repository: $(acrName).azurecr.io/$(imageRepository)
        tags: |
          $(tag)
          latest

    - task: AzureCLI@2
      displayName: 'Login to Azure'
      inputs:
        azureSubscription: 'azure-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login --name $(acrName)

    - task: Docker@2
      displayName: 'Push to ACR'
      inputs:
        containerRegistry: 'acr-service-connection'
        repository: $(imageRepository)
        command: 'push'
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: DeployToAppService
    displayName: 'Deploy to App Service'
    steps:
    - task: AzureCLI@2
      displayName: 'Deploy to App Service'
      inputs:
        azureSubscription: 'azure-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Update existing App Service to use new container image
          echo "Updating App Service to use new container image..."
          az webapp config container set \
            --name $(appServiceName) \
            --resource-group $(resourceGroup) \
            --docker-custom-image-name $(acrName).azurecr.io/$(imageRepository):$(tag) \
            --docker-registry-server-url https://$(acrName).azurecr.io
            
          # Restart the app to apply changes
          az webapp restart --name $(appServiceName) --resource-group $(resourceGroup)
          
          # Display the app URL
          APP_URL=$(az webapp show --name $(appServiceName) --resource-group $(resourceGroup) --query defaultHostName -o tsv)
          echo "App deployed to: https://$APP_URL"