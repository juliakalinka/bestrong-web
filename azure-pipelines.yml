trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: terraform-web-vars
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: imageRepository
    value: 'bestrong-web-api'
  - name: tag
    value: '$(Build.BuildId)'
  - name: acrName
    value: 'bestrongacr1web'

stages:
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push'
    steps:
    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: build
        dockerfile: $(dockerfilePath)
        repository: $(acrName).azurecr.io/$(imageRepository)
        tags: |
          $(tag)
          latest
    - task: Bash@3
      displayName: 'Debug Variables'
      inputs:
        targetType: 'inline'
        script: |
          echo "Tag: $(tag)"
          echo "Image Repository: $(imageRepository)"
    - task: Bash@3
      displayName: 'Verify Docker Image'
      inputs:
        targetType: 'inline'
        script: |
          docker images | grep $(tag)

    - task: AzureCLI@2
      displayName: 'Login to Azure'
      inputs:
        azureSubscription: 'azure-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login --name $(acrName)

    - task: Docker@2
      displayName: 'Push to ACR'
      inputs:
        containerRegistry: 'acr-service-connection'
        repository: $(imageRepository)
        command: 'push'
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: DeployToWebApp
    displayName: 'Deploy to Web App'
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy to Azure Web App'
      inputs:
        azureSubscription: 'azure-service-connection'
        appName: '$(webAppName)'
        imageName: '$(acrName).azurecr.io/$(imageRepository):$(tag)'
        containerRegistryServerId: 'acr-service-connection'
    
    - task: AzureCLI@2
      displayName: 'Verify Deployment'
      inputs:
        azureSubscription: 'azure-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Waiting for application to be available..."
          sleep 30 # Give time for app to start
          
          APP_URL=$(az webapp show --name $(webAppName) --resource-group bestrong-app-rg --query defaultHostName -o tsv)
          echo "Deployed to: https://$APP_URL"
          
          # Check API availability
          echo "Checking Swagger UI..."
          STATUS_SWAGGER=$(curl -s -o /dev/null -w "%{http_code}" https://$APP_URL/swagger || echo "Failed")
          echo "Swagger UI status: $STATUS_SWAGGER"
          
          echo "Checking API..."
          STATUS_API=$(curl -s -o /dev/null -w "%{http_code}" https://$APP_URL/api/v1/foods || echo "Failed")
          echo "API status: $STATUS_API"
          
          if [ "$STATUS_API" == "200" ] || [ "$STATUS_SWAGGER" == "200" ]; then
            echo "Application is available!"
          else
            echo "Application might have issues. Displaying logs:"
            az webapp log tail --name $(webAppName) --resource-group bestrong-app-rg --lines 50
          fi
# Test