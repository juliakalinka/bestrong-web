trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'ASPNETCore-WebAPI-Sample/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'azure-pipelines.yml'

pr:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageRepository: 'bestrong-web-api'
  tag: '$(Build.BuildId)'
  acrName: 'bestrong1acr1'
  acrLoginServer: 'bestrong1acr1.azurecr.io'
  appServiceName: 'bestrong-app-service'
  resourceGroupName: 'bestrong-rg'

stages:
  - stage: Build
    jobs:
      - job: DockerBuildPush
        steps:
          - checkout: self

          - task: Docker@2
            displayName: 'Login to ACR'
            inputs:
              command: login
              containerRegistry: 'bestrong-acr-connection'

          - task: Docker@2
            displayName: 'Build and Push Image to ACR'
            inputs:
              repository: '$(acrLoginServer)/$(imageRepository)'
              command: 'buildAndPush'
              Dockerfile: 'Dockerfile'
              tags: |
                $(tag)

  - stage: Deploy
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: DeployToAppService
        steps:
          - task: AzureCLI@2
            displayName: 'Deploy to Azure App Service'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az webapp config container set \
                  --name $(appServiceName) \
                  --resource-group $(resourceGroupName) \
                  --docker-custom-image-name $(acrLoginServer)/$(imageRepository):$(tag) \
                  --docker-registry-server-url https://$(acrLoginServer)

                az webapp restart \
                  --name $(appServiceName) \
                  --resource-group $(resourceGroupName)